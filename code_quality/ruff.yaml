parameters:
  - name: SOURCE_FOLDER
    type: string
    default: '.'
  - name: PYTHON_VERSION
    type: string
    default: '3.12'
  - name: RUFF_ARGS
    type: string
    default: '<not_set>'

variables:
  # Add your secret GitHub token in pipeline variables as GITHUB_TOKEN (keep it secret)
  GITHUB_TOKEN: $(GITHUB_TOKEN)  

steps:
  # Set AGENT_TOOL_GITHUB_AUTH env var so tool installer can authenticate to GitHub
  - script: echo "Setting GitHub token for tool downloads"
    env:
      AGENT_TOOL_GITHUB_AUTH: $(GITHUB_TOKEN)
    displayName: 'Set GitHub Auth Token'

  - task: UsePythonVersion@0
    inputs:
      versionSpec: ${{ parameters.PYTHON_VERSION }}
      addToPath: true
    displayName: Use Python ${{ parameters.PYTHON_VERSION }}
    continueOnError: true  # Prevent failure if Python isn't in the cache
    env:
      AGENT_TOOL_GITHUB_AUTH: $(GITHUB_TOKEN)

  - script: |
      python --version
      python -m pip install --upgrade pip
      pip install ruff
    displayName: Install Ruff

  - ${{ if eq(parameters.RUFF_ARGS, '<not_set>') }}:
    - script: |
        ruff format --check ${{ parameters.SOURCE_FOLDER }}
      displayName: Ruff Format Check

    - script: |
        ruff check ${{ parameters.SOURCE_FOLDER }} --output-format=github
      displayName: Ruff Lint Check

  - ${{ if ne(parameters.RUFF_ARGS, '<not_set>') }}:
    - script: |
        ruff format --check ${{ parameters.SOURCE_FOLDER }}
      displayName: Ruff Format Check with custom args

    - script: |
        ruff check ${{ parameters.RUFF_ARGS }} ${{ parameters.SOURCE_FOLDER }} --output-format=github
      displayName: Ruff Lint Check with custom args
